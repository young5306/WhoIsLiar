worker_processes auto;  # CPU 코어 수에 따라 자동 설정

events {
    worker_connections 1024;  # 최대 동시 접속 수 설정
}


http {
    include       mime.types;  
    default_type  application/octet-stream;  
    sendfile      on;  
    keepalive_timeout 65;  

    upstream spring_app {
        server backend:8080;  # backend 컨테이너의 8080 포트로 요청 전달
    }

    upstream vue_app {
        server frontend:80;  # frontend 컨테이너의 80 포트로 요청 전달
    }

    # HTTP 요청을 HTTPS로 자동 리디렉션
    server {
        listen 80;
        server_name 
        return 301 https://$host$request_uri;  # HTTP 요청을 HTTPS로 강제 이동
    }

    # HTTPS 서버 설정
    server {
        listen 443 ssl;  # HTTPS 요청을 처리하도록 443 포트 활성화
        server_name k12a604.p.ssafy.io;

        # SSL 인증서 경로 (Let's Encrypt 사용)
        ssl_certificate /etc/letsencrypt/live/k12a604.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/k12a604.p.ssafy.io/privkey.pem;

        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 백엔드(Spring Boot)로 API 요청 전달
        location /api/ {
            proxy_pass http://spring_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # 프론트엔드 요청 전달
        location / {
            proxy_pass http://vue_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
}
