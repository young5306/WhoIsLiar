worker_processes 1;

events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name whoisliar.me;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name whoisliar.me;

        ssl_certificate /etc/letsencrypt/live/whoisliar.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/whoisliar.me/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location = /grafana {
            return 301 /grafana/;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /prometheus/ {
            proxy_pass http://prometheus:9090/prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location = /swagger-ui.html {
            proxy_pass http://backend:8080/swagger-ui.html;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /swagger-ui/ {
            proxy_pass http://backend:8080/swagger-ui/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /v3/api-docs {
            proxy_pass http://backend:8080/v3/api-docs;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /ws/ {
            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }
}
