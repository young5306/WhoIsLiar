services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.2.4
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend 
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/custom.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    networks:
      - app-network
  openvidu:
    image: openvidu/openvidu-server-kms:latest
    container_name: openvidu
    restart: always
    ports:
      - "4443:4443"  
      - "5443:5443"  
    environment:
      - OPENVIDU_SECRET=MY_SECRET
      - DOMAIN_OR_PUBLIC_IP=whoisliar.me
      - CERTIFICATE_TYPE=letsencrypt
      - LETSENCRYPT_EMAIL=your@email.com
      - LETSENCRYPT_DOMAIN=whoisliar.me
      - HTTPS=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/letsencrypt:/etc/letsencrypt  
    networks:
      - app-network 


volumes:
  mysql-data:
  redis-data:

networks:
  app-network:
    external: true
